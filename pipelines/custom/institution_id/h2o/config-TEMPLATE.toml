institution_id = "custom_inst_id"
institution_name = "Custom Institution Name"

student_id_col = "student_id"
target_col = "target"
split_col = "split"
sample_weight_col = "sample_weight"
student_group_cols = ["firstgenflag", "agegroup", "gender", "ethnicity", "disabilityflag"]
pred_col = "pred"
pred_prob_col = "pred_prob"
pos_label = true
random_state = 12345

[student_group_aliases]
firstgenflag = "First-Generation Status"
agegroup = "Age"
gender = "Gender"
ethnicity = "Ethnicity"
disabilityflag = "Disability Status"

[datasets.bronze]

[datasets.bronze.raw_cohort]
primary_keys = ["student_id"]
non_null_cols = ["acad_year"]
train_file_path = "/Volumes/CATALOG/INST_ID_bronze/.../FILE_NAME_cohort_train.csv"
predict_file_path = "/Volumes/CATALOG/INST_ID_bronze/.../FILE_NAME_cohort_inference.csv"

[datasets.bronze.raw_course]
primary_keys = ["student_id", "course_id"]
drop_cols = ["timestamp"]
train_file_path = "/Volumes/CATALOG/INST_ID_bronze/.../FILE_NAME_course_train.csv"
predict_file_path = "/Volumes/CATALOG/INST_ID_bronze/.../FILE_NAME_course_inference.csv"

[datasets.bronze.raw_semester]
train_file_path = "/Volumes/CATALOG/INST_ID_bronze/.../FILE_NAME_semester_train.csv"
predict_file_path = "/Volumes/CATALOG/INST_ID_bronze/.../FILE_NAME_semester_inference.csv"


[datasets.silver]

[datasets.silver.cohort]
train_table_path = "CATALOG.INST_ID_silver.DATASET_NAME_cohort_train"
predict_table_path = "CATALOG.INST_ID_silver.DATASET_NAME_preprocessed_inference"

[datasets.silver.course]
train_table_path = "CATALOG.INST_ID_silver.DATASET_NAME_course_train"
predict_table_path = "CATALOG.INST_ID_silver.DATASET_NAME_course_inference"

[datasets.silver.semester]
train_table_path = "CATALOG.INST_ID_silver.DATASET_NAME_semester_train"
predict_table_path = "CATALOG.INST_ID_silver.DATASET_NAME_semester_inference"

[datasets.silver.modeling]
primary_keys = ["student_id"]
train_table_path = "CATALOG.INST_ID_silver.DATASET_NAME_modeling_train"

[datasets.silver.model_features]
primary_keys = ["student_id"]
predict_table_path = "CATALOG.INST_ID_silver.DATASET_NAME_model_features_inference"


[datasets.gold]

[datasets.gold.sample_advisor_output]
train_table_path = "CATALOG.INST_ID_gold.INST_ID_sample_advisor_output"

[datasets.gold.advisor_output]
predict_table_path = "CATALOG.INST_ID_gold.INST_ID_predictions"


[model]
experiment_id = "EXPERIMENT_ID"
run_id = "RUN_ID"

[preprocessing]
splits = { train = 0.6, test = 0.2, validate = 0.2 }
sample_class_weight = "balanced"

[preprocessing.selection]
student_criteria = { enrollment_type = "FIRST-TIME", credential_type_sought_year_1 = "Bachelor's Degree" }

[preprocessing.selection.student_criteria_aliases]
enrollment_type = "Enrollment Type"
credential_type_sought_year_1 = "Type of Credential Sought in Year 1"

[preprocessing.checkpoint]
name = "30_credits_earned"
params = { min_num_credits = 30.0, num_credits_col = "cumulative_credits_earned" }
unit = "credit" 
value = 30

[preprocessing.target]
name = "graduation_150pct_time"
category = "graduation"
unit = "pct_completion"
value = 150

[preprocessing.target.params]
intensity_time_limits = { FULL-TIME = [3.0, "year"], PART-TIME = [6.0, "year"] }

[modeling.feature_selection]
incomplete_threshold = 0.5
low_variance_threshold = 0.0
collinear_threshold = 10.0
# force_include_cols = []

[modeling.training]
primary_metric = "log_loss"
timeout_minutes = 10
# exclude_frameworks = ["XGBoost", "GBM"]

[modeling.evaluation]
topn_runs_included = 5

[inference]
num_top_features = 5
min_prob_pos_label = 0.5
background_data_sample = 500